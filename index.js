const Senders = require('./modules/senders');
const Recipients = require('./modules/recipients');
const MessageParser = require('./modules/messageParser');
const nodemailer = require("nodemailer");


let sendersQueue = Senders('./senders.ods'); // –ø–æ–ª—É—á–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π, —Ö—Ä–∞–Ω—è—â–∏—Ö –≤ —Å–µ–±–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ –æ—á–µ—Ä–µ–¥—å)
let recipientsStack = Recipients('./recipients.ods'); // –ø–æ–ª—É—á–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫, —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö –∞–¥—Ä–µ—Å–∞ –ø–æ—á—Ç–æ–≤—ã—Ö —è—â–∏–∫–æ–≤ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
let messageParser = MessageParser('./mail.txt'); // –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ —Ç–µ–ª–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞

recipientsStack.forEach(recipientEmail => // –ø—Ä–æ–≥–æ–Ω—è–µ–º callback –ø–æ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É —Å–ø–∏—Å–∫–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
{
    let senderAccount = sendersQueue.shift(); // –ø–æ–ª—É—á–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –¥–ª—è –Ω–æ–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏

    /**
     * @description –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤—â–∏–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –µ–≥–æ –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–¥–µ—Å—å –∂–µ
     */
    async function main() // async..await is not allowed in global scope, must use a wrapper
    {
        // —Å–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤—â–∏–∫–∞, –∏—Å–ø–æ–ª—å–∑—É—é—â–µ–≥–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é SMTP —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
        let transporter = nodemailer.createTransport({
            host: senderAccount.host, // smpt-—Å–µ—Ä–≤–µ—Ä: smtp.mail.ru
            port: senderAccount.port, // –ø–æ—Ä—Ç: 465 –¥–ª—è –∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
            secure: senderAccount.secure, // true –¥–ª—è 465, false –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ—Ä—Ç–æ–≤
            auth: {
                user: senderAccount.login, // –ª–æ–≥–∏–Ω –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ smtp-—Å–µ—Ä–≤–µ—Ä–µ
                pass: senderAccount.pass, // –ø–∞—Ä–æ–ª—å –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ smtp-—Å–µ—Ä–≤–µ—Ä–µ
            },
        });

        // –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤—â–∏–∫–∞
        let info = await transporter.sendMail({
            from: `"GoodProgger üëª" <${senderAccount.login}>`, // –∞–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è  //TODO: –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
            to: `${recipientEmail}`, // —Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π (–º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ—á—Ç–æ–≤—ã—Ö –∞–¥—Ä–µ—Å–æ–≤)
            subject: messageParser.subject, // —Ç–µ–º–∞ –ø–∏—Å—å–º–∞
            text: messageParser.body, // –ø—Ä–æ—Å—Ç–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Ç–µ–ª–æ –ø–∏—Å—å–º–∞
        });

        console.log("Message sent: %s", info.messageId); // "—É–Ω–∏–∫–∞–ª—å–Ω—ã–π" –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–π —Å–µ—Ä–≤–µ—Ä–æ–º
        // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>
    }

    main().catch(console.error); // –≤—ã–≤–æ–¥ –æ—à–∏–±–æ–∫ –≤ –∫–æ–Ω—Å–æ–ª—å
    sendersQueue.push(senderAccount); // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç —Å–Ω–æ–≤–∞ –≤ –æ—á–µ—Ä–µ–¥—å
});